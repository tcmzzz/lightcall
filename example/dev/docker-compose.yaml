services:
  proxy:
    image: caddy
    volumes:
      - ./conf/Caddyfile:/etc/caddy/Caddyfile
      - ./run/proxy-cert:/cert:ro
    networks:
      ring-dev-bridge:
        ipv4_address: 192.168.66.10
  backend:
    restart: always
    build:
      context: ../../
      dockerfile: ./example/dev/.Dockerfile.golang
    command: air -c /air.toml
    volumes:
      - ../../:/build # need write back collection snapshot
      - ./conf/air.toml:/air.toml:ro
      - ./conf/config.yaml:/config.yaml:ro
      - ./run/fs-cdr-csv:/cdr-csv:ro
      - ./run/cdc:/cdc
      - ./run/fs-record:/record:ro
      - ./run/tmp:/tmp
      - ./run/proxy-cert/rootCA.pem:/usr/local/share/ca-certificates/customCA.crt:ro # mock cloud api
    extra_hosts:
      - "ring.dev.local:192.168.66.10"
    networks:
      ring-dev-bridge:
        ipv4_address: 192.168.66.11
  frontend:
    restart: always
    build:
      context: ../../
      dockerfile: ./example/dev/.Dockerfile.node
    command: pnpm dev --host 0.0.0.0
    environment:
      __VITE_ADDITIONAL_SERVER_ALLOWED_HOSTS: "ring.dev.local"
    volumes:
      - ../../front:/build
    networks:
      ring-dev-bridge:
        ipv4_address: 192.168.66.12
  freeswitch:
    restart: always
    image: ghcr.io/tcmzzz/freeswitch:v1.10.9
    volumes:
      - ./run/fs-cdr-csv:/usr/local/freeswitch/log/cdr-csv
      - ./run/fs-record:/usr/local/freeswitch/recordings
      - ./run/fs-cert:/cert
    networks:
      ring-dev-bridge:
        ipv4_address: 192.168.66.13
    healthcheck:
      test: ["CMD-SHELL", "fs_cli -x 'sofia status profile internal' | grep wss"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  provider:
    restart: always
    build:
      context: ./fake-privider
      dockerfile: ./Dockerfile
    networks:
      ring-dev-bridge:
        ipv4_address: 192.168.66.30
networks:
  ring-dev-bridge:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.gateway_mode_ipv4: 'nat'
      com.docker.network.bridge.enable_ip_masquerade: 'true'
    ipam:
      config:
        - subnet: "192.168.66.0/24"
          gateway: "192.168.66.1"
